{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"/* globals\n DEBUG: true,\n WebApp: false\n */\n\nDEBUG = !!process.env.VELOCITY_DEBUG;\n\n(function () {\n  'use strict';\n\n  //////////////////////////////////////////////////////////////////////\n  // This code will run inside a mirror and connects the mirror to\n  // velocity via ddp once the mirror starts. Velocity will then\n  // inform frameworks this mirror is ready.\n  //\n  if (process.env.IS_MIRROR) {\n    if (process.env.HANDSHAKE) {\n      WebApp.onListening(function () {\n        DEBUG && console.log('[velocity] Mirror started. Connecting via DDP to parent');\n\n        var velocityConnection = DDP.connect(process.env.PARENT_URL);\n        velocityConnection.onReconnect = function () {\n          DEBUG && console.log('[velocity] Mirror connected to parent. Registering mirror...');\n          velocityConnection.call('velocity/mirrors/register', {\n            framework: process.env.FRAMEWORK,\n            host: process.env.HOST,\n            port: process.env.MIRROR_PORT\n          }, function (error) {\n            if (error) {\n              console.error('[velocity] Could not connect to parent via DDP. ' + 'Please restart your app and try again. ' + 'If this happens often please report it as issue to velocity:core.', error);\n            }\n            // Disconnect because we no longer need the connection\n            velocityConnection.disconnect();\n          });\n        };\n      });\n    } else {\n      DEBUG && console.log('[velocity] Mirror', process.env.MIRROR_PORT, 'configured not to handshake');\n    }\n  }\n})();","ast":null,"map":{"version":3,"sources":["/src/mirrors/mirrorRegistrar.js"],"names":[],"mappings":";;;;;AAKA,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;;AAErC,CAAC,YAAY;AACX,cAAY,CAAC;;;;;;;AAOb,MAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;AACzB,QAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;AACzB,YAAM,CAAC,WAAW,CAAC,YAAY;AAC7B,aAAK,IAAI,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;;AAEhF,YAAI,kBAAkB,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAC7D,0BAAkB,CAAC,WAAW,GAAG,YAAY;AAC3C,eAAK,IAAI,OAAO,CAAC,GAAG,CAAC,8DAA8D,CAAC,CAAC;AACrF,4BAAkB,CAAC,IAAI,CAAC,2BAA2B,EAAE;AACnD,qBAAS,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;AAChC,gBAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI;AACtB,gBAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;WAC9B,EAAE,UAAU,KAAK,EAAE;AAClB,gBAAI,KAAK,EAAE;AACT,qBAAO,CAAC,KAAK,CACX,kDAAkD,GAClD,yCAAyC,GACzC,mEAAmE,EACnE,KAAK,CACN,CAAC;aACH;;AAED,8BAAkB,CAAC,UAAU,EAAE,CAAC;WACjC,CAAC,CAAC;SACJ,CAAC;OAEH,CAAC,CAAC;KACJ,MAAM;AACL,WAAK,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAG,6BAA6B,CAAC,CAAC;KACpG;GACF;CAEF,CAAA,EAAG,CAAC","file":"/src/mirrors/mirrorRegistrar.js.map","sourcesContent":["/* globals\n DEBUG: true,\n WebApp: false\n */\n\nDEBUG = !!process.env.VELOCITY_DEBUG;\n\n(function () {\n  'use strict';\n\n  //////////////////////////////////////////////////////////////////////\n  // This code will run inside a mirror and connects the mirror to\n  // velocity via ddp once the mirror starts. Velocity will then\n  // inform frameworks this mirror is ready.\n  //\n  if (process.env.IS_MIRROR) {\n    if (process.env.HANDSHAKE) {\n      WebApp.onListening(function () {\n        DEBUG && console.log('[velocity] Mirror started. Connecting via DDP to parent');\n\n        var velocityConnection = DDP.connect(process.env.PARENT_URL);\n        velocityConnection.onReconnect = function () {\n          DEBUG && console.log('[velocity] Mirror connected to parent. Registering mirror...');\n          velocityConnection.call('velocity/mirrors/register', {\n            framework: process.env.FRAMEWORK,\n            host: process.env.HOST,\n            port: process.env.MIRROR_PORT\n          }, function (error) {\n            if (error) {\n              console.error(\n                '[velocity] Could not connect to parent via DDP. ' +\n                'Please restart your app and try again. ' +\n                'If this happens often please report it as issue to velocity:core.',\n                error\n              );\n            }\n            // Disconnect because we no longer need the connection\n            velocityConnection.disconnect();\n          });\n        };\n\n      });\n    } else {\n      DEBUG && console.log('[velocity] Mirror', process.env.MIRROR_PORT , 'configured not to handshake');\n    }\n  }\n\n})();\n"]},"hash":"f9b6e78adb51263df90fcdf9fd4b489502e984a8"}
