{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar moderator, presenter, viewer;\n\npresenter = {\n  switchSlide: true,\n  subscribePoll: true,\n  subscribeAnswers: true\n};\n\nmoderator = {\n  joinListenOnly: true,\n  leaveListenOnly: true,\n  raiseOwnHand: true,\n  lowerOwnHand: true,\n  muteSelf: true,\n  unmuteSelf: true,\n  logoutSelf: true,\n  subscribeUsers: true,\n  subscribeChat: true,\n  chatPublic: true,\n  chatPrivate: true,\n  subscribePoll: true,\n  subscribeAnswers: false,\n  setEmojiStatus: true,\n  clearEmojiStatus: true\n};\n\nviewer = function(meetingId, userId) {\n  var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7;\n  return {\n    joinListenOnly: true,\n    leaveListenOnly: true,\n    raiseOwnHand: true,\n    lowerOwnHand: true,\n    muteSelf: true,\n    unmuteSelf: !((ref = Meteor.Meetings.findOne({\n      meetingId: meetingId\n    })) != null ? ref.roomLockSettings.disableMic : void 0) || !((ref1 = Meteor.Users.findOne({\n      meetingId: meetingId,\n      userId: userId\n    })) != null ? ref1.user.locked : void 0),\n    logoutSelf: true,\n    subscribeUsers: true,\n    subscribeChat: true,\n    chatPublic: !((ref2 = Meteor.Meetings.findOne({\n      meetingId: meetingId\n    })) != null ? ref2.roomLockSettings.disablePublicChat : void 0) || !((ref3 = Meteor.Users.findOne({\n      meetingId: meetingId,\n      userId: userId\n    })) != null ? ref3.user.locked : void 0) || ((ref4 = Meteor.Users.findOne({\n      meetingId: meetingId,\n      userId: userId\n    })) != null ? ref4.user.presenter : void 0),\n    chatPrivate: !((ref5 = Meteor.Meetings.findOne({\n      meetingId: meetingId\n    })) != null ? ref5.roomLockSettings.disablePrivateChat : void 0) || !((ref6 = Meteor.Users.findOne({\n      meetingId: meetingId,\n      userId: userId\n    })) != null ? ref6.user.locked : void 0) || ((ref7 = Meteor.Users.findOne({\n      meetingId: meetingId,\n      userId: userId\n    })) != null ? ref7.user.presenter : void 0),\n    subscribePoll: true,\n    subscribeAnswers: false,\n    setEmojiStatus: true,\n    clearEmojiStatus: true\n  };\n};\n\nthis.isAllowedTo = function(action, meetingId, userId, authToken) {\n  var ref, ref1, ref2, ref3, user, validated;\n  validated = (ref = Meteor.Users.findOne({\n    meetingId: meetingId,\n    userId: userId\n  })) != null ? ref.validated : void 0;\n  Meteor.log.info(\"in isAllowedTo: action-\" + action + \", userId=\" + userId + \", authToken=\" + authToken + \" validated:\" + validated);\n  user = Meteor.Users.findOne({\n    meetingId: meetingId,\n    userId: userId\n  });\n  if ((user != null) && authToken === user.authToken) {\n    if (user.validated && user.clientType === \"HTML5\") {\n      if ((ref1 = user.user) != null ? ref1.presenter : void 0) {\n        Meteor.log.info(\"user permissions presenter case\");\n        return presenter[action] || viewer(meetingId, userId)[action] || false;\n      } else if (((ref2 = user.user) != null ? ref2.role : void 0) === 'VIEWER') {\n        Meteor.log.info(\"user permissions viewer case\");\n        return viewer(meetingId, userId)[action] || false;\n      } else if (((ref3 = user.user) != null ? ref3.role : void 0) === 'MODERATOR') {\n        Meteor.log.info(\"user permissions moderator case\");\n        return moderator[action] || false;\n      } else {\n        Meteor.log.warn(\"UNSUCCESSFULL ATTEMPT FROM userid=\" + userId + \" to perform:\" + action);\n        return false;\n      }\n    } else {\n      if (action === \"logoutSelf\") {\n        Meteor.log.warn(\"a user was successfully removed from the meeting following an unsuccessful login\");\n        return true;\n      }\n      return false;\n    }\n  } else {\n    Meteor.log.error((\"in meetingId=\" + meetingId + \" userId=\" + userId + \" tried to perform \" + action + \" without permission\") + (\"\\n..while the authToken was \" + (user != null ? user.authToken : void 0) + \"    and the user's object is \" + (JSON.stringify(user))));\n    return false;\n  }\n};\n","sourceMap":{"version":3,"file":"/server/user_permissions.coffee.js","sourceRoot":"","sources":["/server/user_permissions.coffee"],"names":[],"mappings":";AACA,IAAA,4BAAA;;AAAA,SAAA,GACE;AAAA,EAAA,WAAA,EAAa,IAAb;AAAA,EAGA,aAAA,EAAe,IAHf;AAAA,EAIA,gBAAA,EAAkB,IAJlB;CADF,CAAA;;AAAA,SASA,GAEE;AAAA,EAAA,cAAA,EAAgB,IAAhB;AAAA,EACA,eAAA,EAAiB,IADjB;AAAA,EAOA,YAAA,EAAe,IAPf;AAAA,EAQA,YAAA,EAAe,IARf;AAAA,EAWA,QAAA,EAAW,IAXX;AAAA,EAYA,UAAA,EAAa,IAZb;AAAA,EAcA,UAAA,EAAa,IAdb;AAAA,EAiBA,cAAA,EAAgB,IAjBhB;AAAA,EAkBA,aAAA,EAAe,IAlBf;AAAA,EAqBA,UAAA,EAAY,IArBZ;AAAA,EAsBA,WAAA,EAAa,IAtBb;AAAA,EAyBA,aAAA,EAAe,IAzBf;AAAA,EA0BA,gBAAA,EAAkB,KA1BlB;AAAA,EA6BA,cAAA,EAAgB,IA7BhB;AAAA,EA8BA,gBAAA,EAAkB,IA9BlB;CAXF,CAAA;;AAAA,MA6CA,GAAS,SAAC,SAAD,EAAY,MAAZ,GAAA;AAGP,MAAA,6CAAA;SAAA;AAAA,IAAA,cAAA,EAAgB,IAAhB;AAAA,IACA,eAAA,EAAiB,IADjB;AAAA,IAOA,YAAA,EAAe,IAPf;AAAA,IAQA,YAAA,EAAe,IARf;AAAA,IAWA,QAAA,EAAW,IAXX;AAAA,IAYA,UAAA,EAAa,CAAA;;qBAAgD,CAAE,gBAAgB,CAAC,mBAAlE,CAAD,IACC,CAAA;;;sBAA4D,CAAE,IAAI,CAAC,eAAlE,CAbf;AAAA,IAeA,UAAA,EAAa,IAfb;AAAA,IAkBA,cAAA,EAAgB,IAlBhB;AAAA,IAmBA,aAAA,EAAe,IAnBf;AAAA,IAsBA,UAAA,EAAY,CAAA;;sBAAgD,CAAE,gBAAgB,CAAC,0BAAlE,CAAD,IACE,CAAA;;;sBAA4D,CAAE,IAAI,CAAC,eAAlE,CADH;;;sBAE4D,CAAE,IAAI,CAAC,mBAxB/E;AAAA,IAyBA,WAAA,EAAa,CAAA;;sBAAgD,CAAE,gBAAgB,CAAC,2BAAlE,CAAD,IACC,CAAA;;;sBAA4D,CAAE,IAAI,CAAC,eAAlE,CADF;;;sBAE2D,CAAE,IAAI,CAAC,mBA3B/E;AAAA,IA8BA,aAAA,EAAe,IA9Bf;AAAA,IA+BA,gBAAA,EAAkB,KA/BlB;AAAA,IAkCA,cAAA,EAAgB,IAlChB;AAAA,IAmCA,gBAAA,EAAkB,IAnClB;IAHO;AAAA,CA7CT,CAAA;;AAAA,IAuFC,CAAA,WAAD,GAAe,SAAC,MAAD,EAAS,SAAT,EAAoB,MAApB,EAA4B,SAA5B,GAAA;AAEb,MAAA,sCAAA;AAAA,EAAA,SAAA;;;mBAAuE,CAAE,kBAAzE,CAAA;AAAA,EACA,MAAM,CAAC,GAAG,CAAC,IAAX,CAAgB,yBAAA,GAA0B,MAA1B,GAAiC,WAAjC,GAA4C,MAA5C,GAAmD,cAAnD,GAAiE,SAAjE,GAA2E,aAA3E,GAAwF,SAAxG,CADA,CAAA;AAAA,EAGA,IAAA,GAAO,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB;AAAA,IAAC,SAAA,EAAU,SAAX;AAAA,IAAsB,MAAA,EAAQ,MAA9B;GAArB,CAHP,CAAA;AAKA,EAAA,IAAG,cAAA,IAAU,SAAA,KAAa,IAAI,CAAC,SAA/B;AACE,IAAA,IAAG,IAAI,CAAC,SAAL,IAAmB,IAAI,CAAC,UAAL,KAAmB,OAAzC;AAIE,MAAA,qCAAY,CAAE,kBAAd;AACE,QAAA,MAAM,CAAC,GAAG,CAAC,IAAX,CAAgB,iCAAhB,CAAA,CAAA;AACA,eAAO,SAAU,CAAA,MAAA,CAAV,IAAqB,MAAA,CAAO,SAAP,EAAkB,MAAlB,CAA0B,CAAA,MAAA,CAA/C,IAA0D,KAAjE,CAFF;OAAA,MAKK,sCAAY,CAAE,cAAX,KAAmB,QAAtB;AACH,QAAA,MAAM,CAAC,GAAG,CAAC,IAAX,CAAgB,8BAAhB,CAAA,CAAA;AACA,eAAO,MAAA,CAAO,SAAP,EAAkB,MAAlB,CAA0B,CAAA,MAAA,CAA1B,IAAqC,KAA5C,CAFG;OAAA,MAKA,sCAAY,CAAE,cAAX,KAAmB,WAAtB;AACH,QAAA,MAAM,CAAC,GAAG,CAAC,IAAX,CAAgB,iCAAhB,CAAA,CAAA;AACA,eAAO,SAAU,CAAA,MAAA,CAAV,IAAqB,KAA5B,CAFG;OAAA,MAAA;AAKH,QAAA,MAAM,CAAC,GAAG,CAAC,IAAX,CAAgB,oCAAA,GAAqC,MAArC,GAA4C,cAA5C,GAA0D,MAA1E,CAAA,CAAA;AACA,eAAO,KAAP,CANG;OAdP;KAAA,MAAA;AAuBE,MAAA,IAAG,MAAA,KAAU,YAAb;AAEE,QAAA,MAAM,CAAC,GAAG,CAAC,IAAX,CAAgB,kFAAhB,CAAA,CAAA;AACA,eAAO,IAAP,CAHF;OAAA;AAIA,aAAO,KAAP,CA3BF;KADF;GAAA,MAAA;AA+BE,IAAA,MAAM,CAAC,GAAG,CAAC,KAAX,CAAiB,CAAA,eAAA,GAAgB,SAAhB,GAA0B,UAA1B,GAAoC,MAApC,GAA2C,oBAA3C,GAA+D,MAA/D,GAAsE,qBAAtE,CAAA,GAChB,CAAA,8BAAA,GAA8B,gBAAC,IAAI,CAAE,kBAAP,CAA9B,GAA+C,+BAA/C,GAA6E,CAAC,IAAI,CAAC,SAAL,CAAe,IAAf,CAAD,CAA7E,CADD,CAAA,CAAA;AAEA,WAAO,KAAP,CAjCF;GAPa;AAAA,CAvFf,CAAA","sourcesContent":["\npresenter =\n  switchSlide: true\n\n  #poll\n  subscribePoll: true\n  subscribeAnswers: true\n\n# holds the values for whether the moderator user is allowed to perform an action (true)\n# or false if not allowed. Some actions have dynamic values depending on the current lock settings\nmoderator =\n  # audio listen only\n  joinListenOnly: true\n  leaveListenOnly: true\n\n  # join audio with mic cannot be controlled on the server side as it is\n  # a client side only functionality\n\n  # raising/lowering hand\n  raiseOwnHand : true\n  lowerOwnHand : true\n\n  # muting\n  muteSelf : true\n  unmuteSelf : true\n\n  logoutSelf : true\n\n  #subscribing\n  subscribeUsers: true\n  subscribeChat: true\n\n  #chat\n  chatPublic: true\n  chatPrivate: true\n\n  #poll\n  subscribePoll: true\n  subscribeAnswers: false\n\n  #emojis\n  setEmojiStatus: true\n  clearEmojiStatus: true\n\n# holds the values for whether the viewer user is allowed to perform an action (true)\n# or false if not allowed. Some actions have dynamic values depending on the current lock settings\nviewer = (meetingId, userId) ->\n\n  # listen only\n  joinListenOnly: true\n  leaveListenOnly: true\n\n  # join audio with mic cannot be controlled on the server side as it is\n  # a client side only functionality\n\n  # raising/lowering hand\n  raiseOwnHand : true\n  lowerOwnHand : true\n\n  # muting\n  muteSelf : true\n  unmuteSelf : !(Meteor.Meetings.findOne({meetingId:meetingId})?.roomLockSettings.disableMic) or\n                !(Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.locked)\n\n  logoutSelf : true\n\n  #subscribing\n  subscribeUsers: true\n  subscribeChat: true\n\n  #chat\n  chatPublic: !(Meteor.Meetings.findOne({meetingId:meetingId})?.roomLockSettings.disablePublicChat) or\n                !(Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.locked) or\n                Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.presenter\n  chatPrivate: !(Meteor.Meetings.findOne({meetingId:meetingId})?.roomLockSettings.disablePrivateChat) or\n                !(Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.locked) or\n                Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.presenter\n\n  #poll\n  subscribePoll: true\n  subscribeAnswers: false\n\n  #emojis\n  setEmojiStatus: true\n  clearEmojiStatus: true\n\n# carries out the decision making for actions affecting users. For the list of\n# actions and the default value - see 'viewer' and 'moderator' in the beginning of the file\n@isAllowedTo = (action, meetingId, userId, authToken) ->\n\n  validated = Meteor.Users.findOne({meetingId:meetingId, userId: userId})?.validated\n  Meteor.log.info \"in isAllowedTo: action-#{action}, userId=#{userId}, authToken=#{authToken} validated:#{validated}\"\n\n  user = Meteor.Users.findOne({meetingId:meetingId, userId: userId})\n  # Meteor.log.info \"user=\" + JSON.stringify user\n  if user? and authToken is user.authToken # check if the user is who he claims to be\n    if user.validated and user.clientType is \"HTML5\"\n\n      # PRESENTER\n      # check presenter specific actions or fallback to regular viewer actions\n      if user.user?.presenter\n        Meteor.log.info \"user permissions presenter case\"\n        return presenter[action] or viewer(meetingId, userId)[action] or false\n\n      # VIEWER\n      else if user.user?.role is 'VIEWER'\n        Meteor.log.info \"user permissions viewer case\"\n        return viewer(meetingId, userId)[action] or false\n\n      # MODERATOR\n      else if user.user?.role is 'MODERATOR'\n        Meteor.log.info \"user permissions moderator case\"\n        return moderator[action] or false\n\n      else\n        Meteor.log.warn \"UNSUCCESSFULL ATTEMPT FROM userid=#{userId} to perform:#{action}\"\n        return false\n    else\n      # user was not validated\n      if action is \"logoutSelf\"\n        # on unsuccessful sign-in\n        Meteor.log.warn \"a user was successfully removed from the meeting following an unsuccessful login\"\n        return true\n      return false\n\n  else\n    Meteor.log.error \"in meetingId=#{meetingId} userId=#{userId} tried to perform #{action} without permission\" +\n     \"\\n..while the authToken was #{user?.authToken}    and the user's object is #{JSON.stringify user}\"\n    return false\n"]}}