{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nMeteor.publish('users', function(meetingId, userid, authToken) {\n  var ref, ref1, u, username;\n  Meteor.log.info(\"attempt publishing users for \" + meetingId + \", \" + userid + \", \" + authToken);\n  u = Meteor.Users.findOne({\n    'userId': userid,\n    'meetingId': meetingId\n  });\n  if (u != null) {\n    Meteor.log.info(\"found it from the first time \" + userid);\n    if (isAllowedTo('subscribeUsers', meetingId, userid, authToken)) {\n      Meteor.log.info(userid + \" was allowed to subscribe to 'users'\");\n      username = (u != null ? (ref = u.user) != null ? ref.name : void 0 : void 0) || \"UNKNOWN\";\n      if (((ref1 = u.user) != null ? ref1.connection_status : void 0) !== 'online') {\n        Meteor.call(\"validateAuthToken\", meetingId, userid, authToken);\n      }\n      Meteor.Users.update({\n        'meetingId': meetingId,\n        'userId': userid\n      }, {\n        $set: {\n          'user.connection_status': \"online\"\n        }\n      });\n      Meteor.log.info(\"username of the subscriber: \" + username + \", connection_status becomes online\");\n      this._session.socket.on(\"close\", Meteor.bindEnvironment((function(_this) {\n        return function() {\n          Meteor.log.info(\"\\na user lost connection: session.id=\" + _this._session.id + \" userId = \" + userid + \", username=\" + username + \", meeting=\" + meetingId);\n          Meteor.Users.update({\n            'meetingId': meetingId,\n            'userId': userid\n          }, {\n            $set: {\n              'user.connection_status': \"offline\"\n            }\n          });\n          Meteor.log.info(\"username of the user losing connection: \" + username + \", connection_status: becomes offline\");\n          return requestUserLeaving(meetingId, userid);\n        };\n      })(this)));\n      return Meteor.Users.find({\n        meetingId: meetingId,\n        'user.connection_status': {\n          $in: [\"online\", \"\"]\n        }\n      }, {\n        fields: {\n          'authToken': false\n        }\n      });\n    } else {\n      Meteor.log.warn(\"was not authorized to subscribe to 'users'\");\n      return this.error(new Meteor.Error(402, \"The user was not authorized to subscribe to 'users'\"));\n    }\n  } else {\n    Meteor.call(\"validateAuthToken\", meetingId, userid, authToken);\n    Meteor.log.error(\"there was no such user \" + userid + \"  in \" + meetingId);\n    return Meteor.Users.find({\n      meetingId: meetingId,\n      'user.connection_status': {\n        $in: [\"online\", \"\"]\n      }\n    }, {\n      fields: {\n        'authToken': false\n      }\n    });\n  }\n});\n\nMeteor.publish('chat', function(meetingId, userid, authToken) {\n  if (isAllowedTo('subscribeChat', meetingId, userid, authToken)) {\n    Meteor.log.info(\"publishing chat for \" + meetingId + \" \" + userid + \" \" + authToken);\n    return Meteor.Chat.find({\n      $or: [\n        {\n          'message.chat_type': 'PUBLIC_CHAT',\n          'meetingId': meetingId\n        }, {\n          'message.from_userid': userid,\n          'meetingId': meetingId\n        }, {\n          'message.to_userid': userid,\n          'meetingId': meetingId\n        }\n      ]\n    });\n  } else {\n    this.error(new Meteor.Error(402, \"The user was not authorized to subscribe for 'chats'\"));\n  }\n});\n\nMeteor.publish('bbb_poll', function(meetingId, userid, authToken) {\n  if (isAllowedTo('subscribePoll', meetingId, userid, authToken)) {\n    if (isAllowedTo('subscribeAnswers', meetingId, userid, authToken)) {\n      Meteor.log.info(\"publishing Poll for presenter: \" + meetingId + \" \" + userid + \" \" + authToken);\n      return Meteor.Polls.find({\n        \"poll_info.meetingId\": meetingId,\n        \"poll_info.users\": userid\n      });\n    } else {\n      Meteor.log.info(\"publishing Poll for viewer: \" + meetingId + \" \" + userid + \" \" + authToken);\n      return Meteor.Polls.find({\n        \"poll_info.meetingId\": meetingId,\n        \"poll_info.users\": userid\n      }, {\n        fields: {\n          \"poll_info.poll.answers.num_votes\": 0\n        }\n      });\n    }\n  } else {\n    this.error(new Meteor.Error(402, \"The user was not authorized to subscribe for 'bbb_poll'\"));\n  }\n});\n\nMeteor.publish('shapes', function(meetingId) {\n  return Meteor.Shapes.find({\n    meetingId: meetingId\n  });\n});\n\nMeteor.publish('slides', function(meetingId) {\n  Meteor.log.info(\"publishing slides for \" + meetingId);\n  return Meteor.Slides.find({\n    meetingId: meetingId\n  });\n});\n\nMeteor.publish('meetings', function(meetingId) {\n  Meteor.log.info(\"publishing meetings for \" + meetingId);\n  return Meteor.Meetings.find({\n    meetingId: meetingId\n  });\n});\n\nMeteor.publish('presentations', function(meetingId) {\n  Meteor.log.info(\"publishing presentations for \" + meetingId);\n  return Meteor.Presentations.find({\n    meetingId: meetingId\n  });\n});\n\nMeteor.publish('whiteboard-clean-status', function(meetingId) {\n  Meteor.log.info(\"whiteboard clean status \" + meetingId);\n  return Meteor.WhiteboardCleanStatus.find({\n    meetingId: meetingId\n  });\n});\n","sourceMap":{"version":3,"file":"/server/publish.coffee.js","sourceRoot":"","sources":["/server/publish.coffee"],"names":[],"mappings":"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","sourcesContent":["# Publish only the online users that are in the particular meetingId\r\n# On the client side we pass the meetingId parameter\r\nMeteor.publish 'users', (meetingId, userid, authToken) ->\r\n  Meteor.log.info \"attempt publishing users for #{meetingId}, #{userid}, #{authToken}\"\r\n  u = Meteor.Users.findOne({'userId': userid, 'meetingId': meetingId})\r\n  if u?\r\n    Meteor.log.info \"found it from the first time #{userid}\"\r\n    if isAllowedTo('subscribeUsers', meetingId, userid, authToken)\r\n      Meteor.log.info \"#{userid} was allowed to subscribe to 'users'\"\r\n      username = u?.user?.name or \"UNKNOWN\"\r\n\r\n      # offline -> online\r\n      if u.user?.connection_status isnt 'online'\r\n        Meteor.call \"validateAuthToken\", meetingId, userid, authToken\r\n\r\n      Meteor.Users.update({'meetingId':meetingId, 'userId': userid}, {$set:{'user.connection_status': \"online\"}})\r\n      Meteor.log.info \"username of the subscriber: \" + username + \", connection_status becomes online\"\r\n\r\n      @_session.socket.on(\"close\", Meteor.bindEnvironment(=>\r\n        Meteor.log.info \"\\na user lost connection: session.id=#{@_session.id} userId = #{userid}, username=#{username}, meeting=#{meetingId}\"\r\n        Meteor.Users.update({'meetingId':meetingId, 'userId': userid}, {$set:{'user.connection_status': \"offline\"}})\r\n        Meteor.log.info \"username of the user losing connection: \" + username + \", connection_status: becomes offline\"\r\n        requestUserLeaving meetingId, userid\r\n        )\r\n      )\r\n\r\n      #publish the users which are not offline\r\n      Meteor.Users.find(\r\n        {meetingId: meetingId, 'user.connection_status':{$in: [\"online\", \"\"]}},\r\n        {fields:{'authToken': false}\r\n        })\r\n    else\r\n      Meteor.log.warn \"was not authorized to subscribe to 'users'\"\r\n      @error(new Meteor.Error(402, \"The user was not authorized to subscribe to 'users'\"))\r\n\r\n  else #subscribing before the user was added to the collection\r\n    Meteor.call \"validateAuthToken\", meetingId, userid, authToken\r\n    Meteor.log.error \"there was no such user #{userid}  in #{meetingId}\"\r\n    Meteor.Users.find(\r\n      {meetingId: meetingId, 'user.connection_status':{$in: [\"online\", \"\"]}},\r\n      {fields:{'authToken': false}\r\n      })\r\n\r\n\r\nMeteor.publish 'chat', (meetingId, userid, authToken) ->\r\n  if isAllowedTo('subscribeChat', meetingId, userid, authToken)\r\n  \r\n    Meteor.log.info \"publishing chat for #{meetingId} #{userid} #{authToken}\"\r\n    return Meteor.Chat.find({$or: [\r\n      {'message.chat_type': 'PUBLIC_CHAT', 'meetingId': meetingId},\r\n      {'message.from_userid': userid, 'meetingId': meetingId},\r\n      {'message.to_userid': userid, 'meetingId': meetingId}\r\n    ]})\r\n\r\n  else\r\n    @error new Meteor.Error(402, \"The user was not authorized to subscribe for 'chats'\")\r\n    return\r\n\r\nMeteor.publish 'bbb_poll', (meetingId, userid, authToken) ->\r\n  #checking if it is allowed to see Poll Collection in general\r\n  if isAllowedTo('subscribePoll', meetingId, userid, authToken)\r\n    #checking if it is allowed to see a number of votes (presenter only)\r\n    if isAllowedTo('subscribeAnswers', meetingId, userid, authToken)\r\n      Meteor.log.info \"publishing Poll for presenter: #{meetingId} #{userid} #{authToken}\"\r\n      return Meteor.Polls.find({\"poll_info.meetingId\": meetingId, \"poll_info.users\": userid})\r\n    else\r\n      Meteor.log.info \"publishing Poll for viewer: #{meetingId} #{userid} #{authToken}\"\r\n      return Meteor.Polls.find({\"poll_info.meetingId\": meetingId, \"poll_info.users\": userid},\r\n        {fields: {\"poll_info.poll.answers.num_votes\": 0}})\r\n  else\r\n    @error new Meteor.Error(402, \"The user was not authorized to subscribe for 'bbb_poll'\")\r\n    return\r\n\r\nMeteor.publish 'shapes', (meetingId) ->\r\n  Meteor.Shapes.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'slides', (meetingId) ->\r\n  Meteor.log.info \"publishing slides for #{meetingId}\"\r\n  Meteor.Slides.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'meetings', (meetingId) ->\r\n  Meteor.log.info \"publishing meetings for #{meetingId}\"\r\n  Meteor.Meetings.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'presentations', (meetingId) ->\r\n  Meteor.log.info \"publishing presentations for #{meetingId}\"\r\n  Meteor.Presentations.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'whiteboard-clean-status', (meetingId) ->\r\n  Meteor.log.info \"whiteboard clean status #{meetingId}\"\r\n  Meteor.WhiteboardCleanStatus.find({meetingId: meetingId})\r\n"]}}