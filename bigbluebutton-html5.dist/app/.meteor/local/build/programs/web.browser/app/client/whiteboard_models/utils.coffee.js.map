{"version":3,"sources":["meteor://ðŸ’»app/client/whiteboard_models/utils.coffee"],"names":[],"mappings":";;;;;;;;;AAEA,MAAM,CAAC,OAAP,CAME;AAAA,aAAW,SAAC,IAAD,EAAO,MAAP,EAAe,MAAf;AACT;AAAA,aAAS,UAAU,MAAnB;AAAA,IACA,OAAO,EAAE,eAAF,CADP;AAAA,IAEA,IAAI,CAAC,IAAL,CACE;AAAA,gBAAW,MAAX;AAAA,MACA,UAAW,IADX;KADF,CAFA;AAKA;AACE,UAAG,MAAM,CAAC,cAAP,CAAsB,GAAtB,CAAH;AACE,uBAAe,EAAE,OAAF,CAAf;AAAA,QACA,YAAY,CAAC,IAAb,CACE;AAAA,kBAAS,QAAT;AAAA,UACA,QAAS,GADT;AAAA,UAEA,SAAU,MAAO,KAFjB;SADF,CADA;AAAA,QAKA,IAAI,CAAC,MAAL,CAAY,YAAZ,CALA,CADF;OADF;AAAA,KALA;AAAA,IAcA,EAAE,MAAF,CAAS,CAAC,MAAV,CAAiB,IAAjB,CAdA;WAeA,IAAI,CAAC,MAAL,GAhBS;EAAA,CAAX;CANF;;AAAA,IAyBC,gBAAD,GAAmB,SAAC,SAAD;;IACjB,YAAa;GAAb;AACA,MAAG,UAAU,CAAC,QAAV,EAAoB,CAAC,KAArB,CAA2B,OAA3B,CAAJ;AACE,UAAM,SAAN,GAAkB,IAAlB,CADF;GADA;SAGA,UAJiB;AAAA,CAzBnB;;AAAA,IAgCC,WAAD,GAAc,SAAC,SAAD;AACZ;AAAA,iBAAe,IAAC,mBAAD,EAAf;AAAA,EACA,QAAQ,yBAAC,YAAY,CAAE,KAAK,CAAC,qBAApB,2BAAkC,YAAY,CAAE,KAAK,CAAC,sBAAvD,IAAuE,CAD/E;SAEA,YAAY,GAAZ,GAAkB,MAHN;AAAA,CAhCd","file":"/client/whiteboard_models/utils.coffee.js","sourcesContent":["# General utility methods\n\nMeteor.methods\n  # POST request using javascript\n  # @param  {string} path   path of submission\n  # @param  {string} params parameters to submit\n  # @param  {string} method method of submission (\"post\" is default)\n  # @return {undefined}\n  postToUrl: (path, params, method) ->\n    method = method or \"post\"\n    form = $(\"<form></form>\")\n    form.attr\n      \"method\" : method,\n      \"action\" : path\n    for key of params\n      if params.hasOwnProperty(key)\n        $hiddenField = $ \"input\"\n        $hiddenField.attr\n          \"type\" : \"hidden\",\n          \"name\" : key,\n          \"value\" : params[key]\n        form.append $hiddenField\n\n    $('body').append form\n    form.submit()\n\n# thickness can be a number (e.g. \"2\") or a string (e.g. \"2px\")\n@formatThickness = (thickness) ->\n  thickness ?= \"1\" # default value\n  if !thickness.toString().match(/.*px$/)\n    \"#\" + thickness + \"px\" # leading \"#\" - to be compatible with Firefox\n  thickness\n\n# applies zooming to the stroke thickness\n@zoomStroke = (thickness) ->\n  currentSlide = @getCurrentSlideDoc()\n  ratio = (currentSlide?.slide.width_ratio + currentSlide?.slide.height_ratio) / 2\n  thickness * 100 / ratio\n"]}