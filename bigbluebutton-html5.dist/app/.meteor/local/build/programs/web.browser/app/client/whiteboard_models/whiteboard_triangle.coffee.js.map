{"version":3,"sources":["meteor://ðŸ’»app/client/whiteboard_models/whiteboard_triangle.coffee"],"names":[],"mappings":";;;;;;;;;AACA;6BAAA;;AAAA,IAAO;AAEL;;AAAa,mCAAC,KAAD;AACX,IADY,IAAC,SAAD,KACZ;AAAA,6DAAM,IAAC,MAAP;AAAA,IAIA,IAAC,WAAD,GAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,MAAb,EAAqB,KAArB,CAJd,CADW;EAAA,CAAb;;AAAA,oCAYA,OAAM,SAAC,IAAD;AACJ;AAAA,QAAG,6CAAH;AACE,UAAI,IAAI,CAAC,MAAO,GAAhB;AAAA,MACA,IAAI,IAAI,CAAC,MAAO,GADhB;AAAA,MAEA,QAAQ,IAAI,CAAC,KAFb;AAAA,MAGA,YAAY,IAAI,CAAC,SAHjB;AAAA,MAKA,OAAO,IAAC,WAAD,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,CALP;AAAA,MAMA,IAAC,IAAD,GAAO,IAAC,MAAK,CAAC,IAAP,CAAY,IAAZ,CANP;AAAA,MAOA,IAAC,IAAG,CAAC,IAAL,CAAU,QAAV,EAAoB,YAAY,KAAZ,CAApB,CAPA;AAAA,MAQA,IAAC,IAAG,CAAC,IAAL,CAAU,cAAV,EAA0B,WAAW,gBAAgB,SAAhB,CAAX,CAA1B,CARA;AAAA,MASA,IAAC,IAAG,CAAC,IAAL,CAAU;AAAA,QAAC,mBAAmB,OAApB;OAAV,CATA;AAAA,MAWA,IAAC,WAAD,GAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,IAAC,IAAG,CAAC,KAAM,UAAxB,EAAmC,IAAC,IAAG,CAAC,KAAM,gBAA9C,CAXd,CADF;KAAA;WAcA,IAAC,KAfG;EAAA,CAZN;;AAAA,oCAkCA,SAAQ,SAAC,IAAD;AACN;AAAA,QAAG,6CAAH;AACE,WAAK,IAAI,CAAC,MAAO,GAAjB;AAAA,MACA,KAAK,IAAI,CAAC,MAAO,GADjB;AAAA,MAEA,KAAK,IAAI,CAAC,MAAO,GAFjB;AAAA,MAGA,KAAK,IAAI,CAAC,MAAO,GAHjB;AAKA,UAAG,gBAAH;AACE,cAAqE,IAAC,sBAAD,CAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,CAArE,EAAC,aAAD,EAAO,aAAP,EAAa,oBAAb,EAA0B,oBAA1B,EAAuC,qBAAvC,EAAqD,qBAArD;AAAA,QAEA,OAAO,IAAC,WAAD,CAAY,OAAO,IAAC,GAAR,GAAa,IAAC,QAA1B,EAAmC,OAAO,IAAC,GAAR,GAAa,IAAC,QAAjD,EACY,cAAc,IAAC,GAAf,GAAoB,IAAC,QADjC,EAC0C,cAAc,IAAC,GAAf,GAAoB,IAAC,QAD/D,EAEY,eAAe,IAAC,GAAhB,GAAqB,IAAC,QAFlC,EAE2C,eAAe,IAAC,GAAhB,GAAqB,IAAC,QAFjE,CAFP;AAAA,QAKA,IAAC,IAAG,CAAC,IAAL,CAAU;AAAA,gBAAM,IAAN;SAAV,CALA;AAAA,QAOA,IAAC,WAAW,GAAZ,GAAiB,EAPjB;AAAA,QAQA,IAAC,WAAW,GAAZ,GAAiB,EARjB;AAAA,QASA,IAAC,WAAW,GAAZ,GAAiB,EATjB;eAUA,IAAC,WAAW,GAAZ,GAAiB,GAXnB;OANF;KADM;EAAA,CAlCR;;AAAA,oCA6DA,OAAM,SAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,MAAjB,EAAyB,SAAzB;AACJ;AAAA,UAAqE,IAAC,sBAAD,CAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,CAArE,EAAC,aAAD,EAAO,aAAP,EAAa,oBAAb,EAA0B,oBAA1B,EAAuC,qBAAvC,EAAqD,qBAArD;AAAA,IACA,OAAO,IAAC,WAAD,CAAY,IAAZ,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,WAArC,EAAkD,YAAlD,EAAgE,YAAhE,CADP;AAAA,IAEA,OAAO,IAAC,mBAAD,CAAoB,IAApB,EAA0B,IAAC,GAA3B,EAA+B,IAAC,GAAhC,EAAoC,IAAC,QAArC,EAA8C,IAAC,QAA/C,CAFP;AAAA,IAGA,WAAW,IAAC,MAAK,CAAC,IAAP,CAAY,IAAZ,CAHX;AAAA,IAIA,QAAQ,CAAC,IAAT,CAAc,KAAK,CAAC,kBAAN,CAAyB,MAAzB,EAAiC,SAAjC,CAAd,CAJA;AAAA,IAKA,QAAQ,CAAC,IAAT,CAAc;AAAA,MAAC,mBAAmB,OAApB;KAAd,CALA;WAMA,SAPI;EAAA,CA7DN;;AAAA,oCAsEA,wBAAuB,SAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb;AACrB;AAAA,WAAQ,CAAC,CAAC,KAAK,EAAN,IAAY,CAAb,IAAkB,EAA1B;AAAA,IACA,OAAO,EADP;AAAA,IAEA,cAAc,EAFd;AAAA,IAGA,cAAc,EAHd;AAAA,IAIA,eAAe,EAJf;AAAA,IAKA,eAAe,EALf;WAMA,CAAC,IAAD,EAAO,IAAP,EAAa,WAAb,EAA0B,WAA1B,EAAuC,YAAvC,EAAqD,YAArD,EAPqB;EAAA,CAtEvB;;AAAA,oCA+EA,aAAY,SAAC,IAAD,EAAO,IAAP,EAAa,WAAb,EAA0B,WAA1B,EAAuC,YAAvC,EAAqD,YAArD;WACV,MAAI,IAAJ,GAAS,GAAT,GAAY,IAAZ,GAAiB,GAAjB,GAAoB,WAApB,GAAgC,GAAhC,GAAmC,WAAnC,GAA+C,GAA/C,GAAkD,YAAlD,GAA+D,GAA/D,GAAkE,YAAlE,GAA+E,IADrE;EAAA,CA/EZ;;AAAA,oCAsFA,qBAAoB,SAAC,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAe,OAAf,EAA0B,OAA1B;AAClB;;MADiC,UAAQ;KACzC;;MAD4C,UAAQ;KACpD;AAAA,WAAO,IAAP;AAAA,IACA,SAAS,MAAM,CAAC,KAAP,CAAa,eAAb,CADT;AAAA,IAEA,MAAM,MAAM,CAAC,MAFb;AAAA,IAGA,IAAI,CAHJ;AAAA,IAMA,OAAO,GANP;AAOA,WAAM,IAAI,GAAV;AACE,UAAmB,MAAK,CAAxB;AAAA,gBAAQ,GAAR;OAAA;AAAA,MACA,QAAQ,KAAK,CAAC,MAAO,GAAP,GAAY,CAAZ,GAAgB,OAAjB,CAAL,GAAiC,GAAjC,GAAuC,CAAC,MAAO,KAAI,CAAJ,CAAP,GAAgB,CAAhB,GAAoB,OAArB,CAD/C;AAAA,MAEA,KAAK,CAFL,CADF;IAAA,CAPA;WAWA,OAAO,IAZW;EAAA,CAtFpB;;iCAAA;;GAFqC,oBAAvC;;AAAA","file":"/client/whiteboard_models/whiteboard_triangle.coffee.js","sourcesContent":["# A triangle in the whiteboard\nclass @WhiteboardTriangleModel extends WhiteboardToolModel\n\n  constructor: (@paper) ->\n    super @paper\n\n    # the defintion of this shape, kept so we can redraw the shape whenever needed\n    # format: x1, y1, x2, y2, stroke color, thickness\n    @definition = [0, 0, 0, 0, \"#000\", \"0px\"]\n\n  # Make a triangle on the whiteboard\n  # @param  {[type]} x         the x value of the top left corner\n  # @param  {[type]} y         the y value of the top left corner\n  # @param  {string} colour    the colour of the object\n  # @param  {number} thickness the thickness of the object's line(s)\n  make: (info) ->\n    if info?.points?\n      x = info.points[0]\n      y = info.points[1]\n      color = info.color\n      thickness = info.thickness\n\n      path = @_buildPath(x, y, x, y, x, y)\n      @obj = @paper.path(path)\n      @obj.attr \"stroke\", formatColor(color)\n      @obj.attr \"stroke-width\", zoomStroke(formatThickness(thickness))\n      @obj.attr({\"stroke-linejoin\": \"round\"})\n\n      @definition = [x, y, x, y, @obj.attrs[\"stroke\"], @obj.attrs[\"stroke-width\"]]\n\n    @obj\n\n  # Update triangle drawn\n  # @param  {number} x1 the x value of the top left corner\n  # @param  {number} y1 the y value of the top left corner\n  # @param  {number} x2 the x value of the bottom right corner\n  # @param  {number} y2 the y value of the bottom right corner\n  update: (info) ->\n    if info?.points?\n      x1 = info.points[0]\n      y1 = info.points[1]\n      x2 = info.points[2]\n      y2 = info.points[3]\n\n      if @obj?\n        [xTop, yTop, xBottomLeft, yBottomLeft, xBottomRight, yBottomRight] = @_getCornersFromPoints(x1, y1, x2, y2)\n\n        path = @_buildPath(xTop * @gw + @xOffset, yTop * @gh + @yOffset,\n                           xBottomLeft * @gw + @xOffset, yBottomLeft * @gh + @yOffset,\n                           xBottomRight * @gw + @xOffset, yBottomRight * @gh + @yOffset)\n        @obj.attr path: path\n\n        @definition[0] = x1\n        @definition[1] = y1\n        @definition[2] = x2\n        @definition[3] = y2\n\n  # Draw a triangle on the whiteboard\n  # @param  {number} x1 the x value of the top left corner\n  # @param  {number} y1 the y value of the top left corner\n  # @param  {number} x2 the x value of the bottom right corner\n  # @param  {number} y2 the y value of the bottom right corner\n  # @param  {string} colour    the colour of the object\n  # @param  {number} thickness the thickness of the object's line(s)\n  draw: (x1, y1, x2, y2, colour, thickness) ->\n    [xTop, yTop, xBottomLeft, yBottomLeft, xBottomRight, yBottomRight] = @_getCornersFromPoints(x1, y1, x2, y2)\n    path = @_buildPath(xTop, yTop, xBottomLeft, yBottomLeft, xBottomRight, yBottomRight)\n    path = @_scaleTrianglePath(path, @gw, @gh, @xOffset, @yOffset)\n    triangle = @paper.path(path)\n    triangle.attr Utils.strokeAndThickness(colour, thickness)\n    triangle.attr({\"stroke-linejoin\": \"round\"})\n    triangle\n\n  _getCornersFromPoints: (x1, y1, x2, y2) ->\n    xTop = (((x2 - x1) / 2) + x1)\n    yTop = y1\n    xBottomLeft = x1\n    yBottomLeft = y2\n    xBottomRight = x2\n    yBottomRight = y2\n    [xTop, yTop, xBottomLeft, yBottomLeft, xBottomRight, yBottomRight]\n\n  _buildPath: (xTop, yTop, xBottomLeft, yBottomLeft, xBottomRight, yBottomRight) ->\n    \"M#{xTop},#{yTop},#{xBottomLeft},#{yBottomLeft},#{xBottomRight},#{yBottomRight}z\"\n\n  # Scales a triangle path string to fit within a width and height of the new paper size\n  # @param  {number} w width of the shape as a percentage of the original width\n  # @param  {number} h height of the shape as a percentage of the original height\n  # @return {string}   the path string after being manipulated to new paper size\n  _scaleTrianglePath: (string, w, h, xOffset=0, yOffset=0) ->\n    path = null\n    points = string.match(/(\\d+[.]?\\d*)/g)\n    len = points.length\n    j = 0\n\n    # go through each point and multiply it by the new height and width\n    path = \"M\"\n    while j < len\n      path += \",\" unless j is 0\n      path += \"\" + (points[j] * w + xOffset) + \",\" + (points[j + 1] * h + yOffset)\n      j += 2\n    path + \"z\"\n\nWhiteboardTriangleModel\n"]}