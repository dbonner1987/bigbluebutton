{"version":3,"sources":["meteor://ðŸ’»app/client/views/users/template.user_item.js"],"names":[],"mappingsfile":"/client/views/users/template.user_item.js","sourcesContent":["\nTemplate.__checkName(\"displayUserIcons\");\nTemplate[\"displayUserIcons\"] = new Template(\"Template.displayUserIcons\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<!-- audio, video, locking, presenter/moderator, hand raised -->\\n  \"), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"isUserInAudio\"), view.lookup(\"userId\"));\n  }, function() {\n    return [ \"\\n    \", HTML.Comment(\" if the user is listen only, only display the one icon \"), \"\\n    \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"isUserListenOnlyAudio\"), view.lookup(\"userId\"));\n    }, function() {\n      return [ \"\\n      \", HTML.SPAN({\n        rel: \"tooltip\",\n        \"data-placement\": \"bottom\",\n        title: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is only listening\" ];\n        }\n      }, \"\\n        \", HTML.I({\n        \"class\": \"icon fi-volume-none usericon\"\n      }), \"\\n      \"), \"\\n    \" ];\n    }, function() {\n      return [ \"\\n      \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"isCurrentUser\"), view.lookup(\"userId\"));\n      }, function() {\n        return [ \"\\n        \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"isUserMuted\"), view.lookup(\"userId\"));\n        }, function() {\n          return [ \"\\n          \", HTML.SPAN({\n            \"class\": \"muteIcon\",\n            rel: \"tooltip\",\n            \"data-placement\": \"bottom\",\n            title: \"Unmute yourself\"\n          }, \"\\n            \", HTML.I({\n            \"class\": \"ion-ios-mic-off usericon\"\n          }), \"\\n          \"), \"\\n        \" ];\n        }, function() {\n          return [ \"\\n          \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"isCurrentUserTalking\"));\n          }, function() {\n            return [ \"\\n            \", HTML.SPAN({\n              \"class\": \"muteIcon\",\n              rel: \"tooltip\",\n              \"data-placement\": \"bottom\",\n              title: \"you are talking\"\n            }, \"\\n              \", HTML.I({\n              \"class\": \"ion-ios-mic usericon\"\n            }), \"\\n            \"), \"\\n          \" ];\n          }, function() {\n            return [ \"\\n          \", HTML.SPAN({\n              \"class\": \"muteIcon\",\n              rel: \"tooltip\",\n              \"data-placement\": \"bottom\",\n              title: \"you are talking\"\n            }, \"\\n            \", HTML.I({\n              \"class\": \"ion-ios-mic-outline usericon\"\n            }), \"\\n          \"), \"\\n          \" ];\n          }), \"\\n        \" ];\n        }), \"\\n      \" ];\n      }, function() {\n        return [ \"\\n        \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"isUserMuted\"), view.lookup(\"userId\"));\n        }, function() {\n          return [ \"\\n          \", HTML.SPAN({\n            rel: \"tooltip\",\n            \"data-placement\": \"bottom\",\n            title: function() {\n              return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is muted\" ];\n            }\n          }, \"\\n            \", HTML.I({\n            \"class\": \"ion-ios-mic-off usericon\"\n          }), \"\\n          \"), \"\\n        \" ];\n        }, function() {\n          return [ \"\\n          \", Blaze.If(function() {\n            return Spacebars.dataMustache(view.lookup(\"isUserTalking\"), view.lookup(\"userId\"));\n          }, function() {\n            return [ \"\\n          \", HTML.SPAN({\n              rel: \"tooltip\",\n              \"data-placement\": \"bottom\",\n              title: function() {\n                return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is talking\" ];\n              }\n            }, \"\\n            \", HTML.I({\n              \"class\": \"ion-ios-mic usericon\"\n            }), \"\\n          \"), \"\\n          \" ];\n          }, function() {\n            return [ \"\\n          \", HTML.SPAN({\n              rel: \"tooltip\",\n              \"data-placement\": \"bottom\",\n              title: function() {\n                return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is not talking\" ];\n              }\n            }, \"\\n            \", HTML.I({\n              \"class\": \"ion-ios-mic-outline usericon\"\n            }), \"\\n          \"), \"\\n          \" ];\n          }), \"\\n        \" ];\n        }), \"\\n      \" ];\n      }), \"\\n    \" ];\n    }), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"isUserSharingVideo\"), view.lookup(\"userId\"));\n  }, function() {\n    return [ \"\\n    \", HTML.SPAN({\n      rel: \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is sharing their webcam\" ];\n      }\n    }, \"\\n      \", HTML.I({\n      \"class\": \"icon fi-video usericon\"\n    }), \"\\n    \"), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"userLockedIconApplicable\"), view.lookup(\"userId\"));\n  }, function() {\n    return [ \"\\n    \", HTML.SPAN({\n      rel: \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is locked\" ];\n      }\n    }, \"\\n      \", HTML.I({\n      \"class\": \"icon fi-lock usericon\"\n    }), \"\\n    \"), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"usernameEntry\");\nTemplate[\"usernameEntry\"] = new Template(\"Template.usernameEntry\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"status\"\n  }, \"\\n      \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"user\"), \"emoji_status\"), \"happy\");\n  }, function() {\n    return [ \"\\n        \", Blaze._TemplateWith(function() {\n      return {\n        name: Spacebars.call(\"happy-face\"),\n        size: Spacebars.call(\"25\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"icon\"));\n    }), \"\\n      \" ];\n  }, function() {\n    return [ \"\\n        \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"user\"), \"emoji_status\"), \"neutral\");\n    }, function() {\n      return [ \"\\n          \", Blaze._TemplateWith(function() {\n        return {\n          name: Spacebars.call(\"neutral-face\"),\n          size: Spacebars.call(\"25\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"icon\"));\n      }), \"\\n        \" ];\n    }, function() {\n      return [ \"\\n          \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"user\"), \"emoji_status\"), \"confused\");\n      }, function() {\n        return [ \"\\n            \", Blaze._TemplateWith(function() {\n          return {\n            name: Spacebars.call(\"confused-face\"),\n            size: Spacebars.call(\"25\")\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"icon\"));\n        }), \"\\n          \" ];\n      }, function() {\n        return [ \"\\n            \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"user\"), \"emoji_status\"), \"sad\");\n        }, function() {\n          return [ \"\\n              \", Blaze._TemplateWith(function() {\n            return {\n              name: Spacebars.call(\"sad-face\"),\n              size: Spacebars.call(\"25\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"icon\"));\n          }), \"\\n            \" ];\n        }, function() {\n          return [ \"\\n              \", Blaze.If(function() {\n            return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"user\"), \"emoji_status\"), \"away\");\n          }, function() {\n            return [ \"\\n                \", Blaze._TemplateWith(function() {\n              return {\n                name: Spacebars.call(\"clock\"),\n                size: Spacebars.call(\"25\")\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"icon\"));\n            }), \"\\n              \" ];\n          }, function() {\n            return [ \"\\n                \", Blaze.If(function() {\n              return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"user\"), \"emoji_status\"), \"raiseHand\");\n            }, function() {\n              return [ \"\\n                  \", HTML.SPAN({\n                rel: \"tooltip\",\n                \"data-placement\": \"bottom\",\n                title: \"Lower your hand\"\n              }, \"\\n                    \", HTML.I({\n                \"class\": \"icon ion-android-hand statusIcon\"\n              }), \"\\n                  \"), \"\\n                \" ];\n            }, function() {\n              return [ \"\\n                  \", Blaze.If(function() {\n                return Spacebars.call(Spacebars.dot(view.lookup(\"user\"), \"presenter\"));\n              }, function() {\n                return [ \"\\n                    \", HTML.SPAN({\n                  rel: \"tooltip\",\n                  \"data-placement\": \"bottom\",\n                  title: function() {\n                    return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is the presenter\" ];\n                  }\n                }, \"\\n                      \", HTML.I({\n                  \"class\": \"icon fi-projection-screen statusIcon\"\n                }), \"\\n                    \"), \"\\n                  \" ];\n              }, function() {\n                return [ \"\\n                    \", Blaze.If(function() {\n                  return Spacebars.dataMustache(view.lookup(\"equals\"), Spacebars.dot(view.lookup(\"user\"), \"role\"), \"MODERATOR\");\n                }, function() {\n                  return [ \"\\n                      \", HTML.SPAN({\n                    rel: \"tooltip\",\n                    \"data-placement\": \"bottom\",\n                    title: function() {\n                      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" is a moderator\" ];\n                    }\n                  }, \"\\n                        \", HTML.I({\n                    \"class\": \"icon fi-torso statusIcon\"\n                  }), \"\\n                      \"), \"\\n                    \" ];\n                }), \"\\n                  \" ];\n              }), \"\\n                \" ];\n            }), \"\\n              \" ];\n          }), \"\\n            \" ];\n        }), \"\\n          \" ];\n      }), \"\\n        \" ];\n    }), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n\\n    \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"isCurrentUser\"), view.lookup(\"userId\"));\n  }, function() {\n    return [ \"\\n      \", HTML.SPAN({\n      \"class\": function() {\n        return [ \"userCurrent usernameEntry \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"hasGotUnreadMailClass\"), \"PUBLIC_CHAT\");\n        }, function() {\n          return \"gotUnreadMail\";\n        }) ];\n      },\n      rel: \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\")), \" (you)\" ];\n      }\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"userName\"\n    }, Blaze.View(\"lookup:user.name\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\"));\n    }), \" \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"user\"), \"presenter\"));\n    }, function() {\n      return \" (presenter) \";\n    }), \" (you)\"), \"\\n      \"), \"\\n      \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"hasGotUnreadMailClass\"), \"PUBLIC_CHAT\");\n    }, function() {\n      return [ \"\\n        \", HTML.DIV({\n        \"class\": \"unreadChatNumber\"\n      }, Blaze.View(\"lookup:getNumberOfUnreadMessages\", function() {\n        return Spacebars.mustache(view.lookup(\"getNumberOfUnreadMessages\"), \"PUBLIC_CHAT\");\n      })), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      \", HTML.SPAN({\n      \"class\": function() {\n        return [ \"usernameEntry \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"hasGotUnreadMailClass\"), Spacebars.dot(view.lookup(\"user\"), \"userid\"));\n        }, function() {\n          return \"gotUnreadMail\";\n        }) ];\n      },\n      rel: \"tooltip\",\n      \"data-placement\": \"bottom\",\n      title: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\"));\n      }\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"userName\"\n    }, \" \", Blaze.View(\"lookup:user.name\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"user\"), \"name\"));\n    }), \" \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"user\"), \"presenter\"));\n    }, function() {\n      return \" (presenter) \";\n    })), \"\\n      \"), \"\\n      \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"hasGotUnreadMailClass\"), Spacebars.dot(view.lookup(\"user\"), \"userid\"));\n    }, function() {\n      return [ \"\\n        \", HTML.DIV({\n        \"class\": \"unreadChatNumber\"\n      }, Blaze.View(\"lookup:getNumberOfUnreadMessages\", function() {\n        return Spacebars.mustache(view.lookup(\"getNumberOfUnreadMessages\"), Spacebars.dot(view.lookup(\"user\"), \"userid\"));\n      })), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"userItem\");\nTemplate[\"userItem\"] = new Template(\"Template.userItem\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"usernameEntry\")), \"\\n  \", HTML.DIV({\n    id: \"usericons\"\n  }, \"\\n    \", Spacebars.include(view.lookupTemplate(\"displayUserIcons\")), \"\\n  \") ];\n}));\n"]}