{"version":3,"sources":["meteor://ğŸ’»app/client/views/users/user_item.coffee"],"names":[],"mappings":";;;;;;;;;AAAA,QAAQ,CAAC,gBAAgB,CAAC,MAA1B,CACE;AAAA,qBAAmB,SAAC,KAAD;WACjB,UAAU,IAAV,EADiB;EAAA,CAAnB;AAAA,EAGA,yBAAyB,SAAC,KAAD;WAKvB,GAAG,CAAC,SAAJ,CAAc,aAAa,WAAb,CAAd,EAAyC,IAAC,OAA1C,EAAkD,aAAa,QAAb,CAAlD,EAA0E,aAAa,WAAb,CAA1E,EALuB;EAAA,CAHzB;CADF;;AAAA,QAWQ,CAAC,gBAAgB,CAAC,OAA1B,CACE;AAAA,4BAA0B,SAAC,MAAD;AAGxB;AAAA,sDAA4B,CAAE,IAAI,CAAC,eAAnC;AAAA,IACA,4DAAoC,CAAE,yBADtC;AAAA,IAEA,eAAe,QAAQ,CAAC,kBAAT,IACC,QAAQ,CAAC,UADV,IAEC,QAAQ,CAAC,UAFV,IAGC,QAAQ,CAAC,YAHV,IAIC,QAAQ,CAAC,iBANzB;AAOA,WAAO,UAAW,YAAlB,CAVwB;EAAA,CAA1B;CADF,CAXA;;AAAA,QAyBQ,CAAC,aAAa,CAAC,MAAvB,CACE;AAAA,0BAAwB,SAAC,KAAD;AACtB;AAAA,qBAAiB,IAAC,CAAC,MAAnB;AACA,QAAO,mBAAkB,IAAzB;AACE,UAAG,8DAAsC,CAAE,gBAA3C;AACE,qBAAa,YAAb,EAA2B,aAA3B,EADF;OAAA;AAGE,qBAAa,YAAb,EAA2B,cAA3B,EAHF;OADF;KADA;AAMA,QAAG,gBAAgB,kBAAnB;AACE;AAAA,MACA,yBADA;AAAA,MAEA,cAFA,CADF;KANA;WAUA,WAAW;aACT,EAAE,kBAAF,CAAqB,CAAC,KAAtB,GADS;IAAA,CAAX,EAEE,CAFF,EAXsB;EAAA,CAAxB;AAAA,EAeA,wBAAwB,SAAC,KAAD;AACtB;AAAA,YAAQ,IAAR;AAAA,IACA,YAAY,aAAa,QAAb,CADZ;AAEA,QAAG,cAAe,MAAf,IAA6B,cAAa,KAAK,CAAC,MAAnD;AACE,YAAM,aAAN,CADF;KAAA;AAGE,YAAM,KAAK,CAAC,MAAZ,CAHF;KAFA;AAAA,IAMA,QAAQ,aAAa,OAAb,CANR;AAOA,QAAG,UAAW,MAAd;AACE;wBAAA;AACE,YAAG,IAAI,CAAC,MAAL,KAAe,GAAlB;AACE,cAAI,CAAC,OAAL,GAAe,KAAf;AAAA,UACA,IAAI,CAAC,MAAL,GAAc,CADd;AAEA,gBAHF;SADF;AAAA;aAKA,aAAa,OAAb,EAAsB,KAAtB,EANF;KARsB;EAAA,CAfxB;CADF,CAzBA;;AAAA,QAyDQ,CAAC,aAAa,CAAC,OAAvB,CACE;AAAA,yBAAuB,SAAC,MAAD;AACrB;AAAA,YAAQ,aAAa,OAAb,CAAR;AACA,QAAG,UAAW,MAAd;AACE;wBAAA;AACE,YAAG,IAAI,CAAC,MAAL,KAAe,MAAf,IAA0B,IAAI,CAAC,OAAlC;AACE,iBAAO,IAAP,CADF;SADF;AAAA,OADF;KADA;AAKA,WAAO,KAAP,CANqB;EAAA,CAAvB;AAAA,EAQA,2BAA2B,SAAC,MAAD;AACzB;AAAA,YAAQ,aAAa,OAAb,CAAR;AACA,QAAG,UAAW,MAAd;AACE;wBAAA;AACE,YAAG,IAAI,CAAC,MAAL,KAAe,MAAf,IAA0B,IAAI,CAAC,OAAlC;AACE,cAAG,IAAI,CAAC,MAAL,GAAc,CAAjB;AACE,mBAAO,IAAP,CADF;WAAA;AAGE,mBAAO,IAAI,CAAC,MAAZ,CAHF;WADF;SADF;AAAA,OADF;KAFyB;EAAA,CAR3B;CADF,CAzDA","file":"/client/views/users/user_item.coffee.js","sourcesContent":["Template.displayUserIcons.events\n  'click .muteIcon': (event) ->\n    toggleMic @\n\n  'click .raisedHandIcon': (event) ->\n    # the function to call 'userLowerHand'\n    # the meeting id\n    # the _id of the person whose land is to be lowered\n    # the userId of the person who is lowering the hand\n    BBB.lowerHand(getInSession(\"meetingId\"), @userId, getInSession(\"userId\"), getInSession(\"authToken\"))\n\nTemplate.displayUserIcons.helpers\n  userLockedIconApplicable: (userId) ->\n    # the lock settings affect the user (and requiire a lock icon) if\n    # the user is set to be locked and there is a relevant lock in place\n    locked = BBB.getUser(userId)?.user.locked\n    settings = Meteor.Meetings.findOne()?.roomLockSettings\n    lockInAction = settings.disablePrivateChat or\n                    settings.disableCam or\n                    settings.disableMic or\n                    settings.lockedLayout or\n                    settings.disablePublicChat\n    return locked and lockInAction\n\n# Opens a private chat tab when a username from the userlist is clicked\nTemplate.usernameEntry.events\n  'click .usernameEntry': (event) ->\n    userIdSelected = @.userId\n    unless userIdSelected is null\n      if userIdSelected is BBB.getCurrentUser()?.userId\n        setInSession \"inChatWith\", \"PUBLIC_CHAT\"\n      else\n        setInSession \"inChatWith\", userIdSelected\n    if isPortrait() or isPortraitMobile()\n      toggleUserlistMenu()\n      toggleLeftHamburderIcon()\n      toggleShield()\n    setTimeout () -> # waits until the end of execution queue\n      $(\"#newMessageInput\").focus()\n    , 0\n\n  'click .gotUnreadMail': (event) ->\n    _this = @\n    currentId = getInSession('userId')\n    if currentId isnt undefined and currentId is _this.userId\n      _id = \"PUBLIC_CHAT\"\n    else\n      _id = _this.userId\n    chats = getInSession('chats')\n    if chats isnt undefined\n      for chat in chats\n        if chat.userId is _id\n          chat.gotMail = false\n          chat.number = 0\n          break\n      setInSession 'chats', chats\n\nTemplate.usernameEntry.helpers\n  hasGotUnreadMailClass: (userId) ->\n    chats = getInSession('chats')\n    if chats isnt undefined\n      for chat in chats\n        if chat.userId is userId and chat.gotMail\n          return true\n    return false\n\n  getNumberOfUnreadMessages: (userId) ->\n    chats = getInSession('chats')\n    if chats isnt undefined\n      for chat in chats\n        if chat.userId is userId and chat.gotMail\n          if chat.number > 9\n            return \"9+\"\n          else\n            return chat.number\n    return\n"]}