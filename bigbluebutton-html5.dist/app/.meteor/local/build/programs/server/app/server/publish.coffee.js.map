{"version":3,"sources":["meteor://ðŸ’»app/server/publish.coffee"],"names":[],"mappings":"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","file":"/server/publish.coffee.js","sourcesContent":["# Publish only the online users that are in the particular meetingId\r\n# On the client side we pass the meetingId parameter\r\nMeteor.publish 'users', (meetingId, userid, authToken) ->\r\n  Meteor.log.info \"attempt publishing users for #{meetingId}, #{userid}, #{authToken}\"\r\n  u = Meteor.Users.findOne({'userId': userid, 'meetingId': meetingId})\r\n  if u?\r\n    Meteor.log.info \"found it from the first time #{userid}\"\r\n    if isAllowedTo('subscribeUsers', meetingId, userid, authToken)\r\n      Meteor.log.info \"#{userid} was allowed to subscribe to 'users'\"\r\n      username = u?.user?.name or \"UNKNOWN\"\r\n\r\n      # offline -> online\r\n      if u.user?.connection_status isnt 'online'\r\n        Meteor.call \"validateAuthToken\", meetingId, userid, authToken\r\n\r\n      Meteor.Users.update({'meetingId':meetingId, 'userId': userid}, {$set:{'user.connection_status': \"online\"}})\r\n      Meteor.log.info \"username of the subscriber: \" + username + \", connection_status becomes online\"\r\n\r\n      @_session.socket.on(\"close\", Meteor.bindEnvironment(=>\r\n        Meteor.log.info \"\\na user lost connection: session.id=#{@_session.id} userId = #{userid}, username=#{username}, meeting=#{meetingId}\"\r\n        Meteor.Users.update({'meetingId':meetingId, 'userId': userid}, {$set:{'user.connection_status': \"offline\"}})\r\n        Meteor.log.info \"username of the user losing connection: \" + username + \", connection_status: becomes offline\"\r\n        requestUserLeaving meetingId, userid\r\n        )\r\n      )\r\n\r\n      #publish the users which are not offline\r\n      Meteor.Users.find(\r\n        {meetingId: meetingId, 'user.connection_status':{$in: [\"online\", \"\"]}},\r\n        {fields:{'authToken': false}\r\n        })\r\n    else\r\n      Meteor.log.warn \"was not authorized to subscribe to 'users'\"\r\n      @error(new Meteor.Error(402, \"The user was not authorized to subscribe to 'users'\"))\r\n\r\n  else #subscribing before the user was added to the collection\r\n    Meteor.call \"validateAuthToken\", meetingId, userid, authToken\r\n    Meteor.log.error \"there was no such user #{userid}  in #{meetingId}\"\r\n    Meteor.Users.find(\r\n      {meetingId: meetingId, 'user.connection_status':{$in: [\"online\", \"\"]}},\r\n      {fields:{'authToken': false}\r\n      })\r\n\r\n\r\nMeteor.publish 'chat', (meetingId, userid, authToken) ->\r\n  if isAllowedTo('subscribeChat', meetingId, userid, authToken)\r\n  \r\n    Meteor.log.info \"publishing chat for #{meetingId} #{userid} #{authToken}\"\r\n    return Meteor.Chat.find({$or: [\r\n      {'message.chat_type': 'PUBLIC_CHAT', 'meetingId': meetingId},\r\n      {'message.from_userid': userid, 'meetingId': meetingId},\r\n      {'message.to_userid': userid, 'meetingId': meetingId}\r\n    ]})\r\n\r\n  else\r\n    @error new Meteor.Error(402, \"The user was not authorized to subscribe for 'chats'\")\r\n    return\r\n\r\nMeteor.publish 'bbb_poll', (meetingId, userid, authToken) ->\r\n  #checking if it is allowed to see Poll Collection in general\r\n  if isAllowedTo('subscribePoll', meetingId, userid, authToken)\r\n    #checking if it is allowed to see a number of votes (presenter only)\r\n    if isAllowedTo('subscribeAnswers', meetingId, userid, authToken)\r\n      Meteor.log.info \"publishing Poll for presenter: #{meetingId} #{userid} #{authToken}\"\r\n      return Meteor.Polls.find({\"poll_info.meetingId\": meetingId, \"poll_info.users\": userid})\r\n    else\r\n      Meteor.log.info \"publishing Poll for viewer: #{meetingId} #{userid} #{authToken}\"\r\n      return Meteor.Polls.find({\"poll_info.meetingId\": meetingId, \"poll_info.users\": userid},\r\n        {fields: {\"poll_info.poll.answers.num_votes\": 0}})\r\n  else\r\n    @error new Meteor.Error(402, \"The user was not authorized to subscribe for 'bbb_poll'\")\r\n    return\r\n\r\nMeteor.publish 'shapes', (meetingId) ->\r\n  Meteor.Shapes.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'slides', (meetingId) ->\r\n  Meteor.log.info \"publishing slides for #{meetingId}\"\r\n  Meteor.Slides.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'meetings', (meetingId) ->\r\n  Meteor.log.info \"publishing meetings for #{meetingId}\"\r\n  Meteor.Meetings.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'presentations', (meetingId) ->\r\n  Meteor.log.info \"publishing presentations for #{meetingId}\"\r\n  Meteor.Presentations.find({meetingId: meetingId})\r\n\r\nMeteor.publish 'whiteboard-clean-status', (meetingId) ->\r\n  Meteor.log.info \"whiteboard clean status #{meetingId}\"\r\n  Meteor.WhiteboardCleanStatus.find({meetingId: meetingId})\r\n"]}