{"version":3,"sources":["meteor://ðŸ’»app/server/collection_methods/poll.coffee"],"names":[],"mappings":"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","file":"/server/collection_methods/poll.coffee.js","sourcesContent":["# --------------------------------------------------------------------------------------------\r\n# Public methods on server\r\n# --------------------------------------------------------------------------------------------\r\nMeteor.methods\r\n\r\n  publishVoteMessage: (meetingId, pollAnswerId, requesterUserId, requesterToken) ->\r\n    if isAllowedTo(\"subscribePoll\", meetingId, requesterUserId, requesterToken)\r\n      eventName = \"vote_poll_user_request_message\"\r\n\r\n      result = Meteor.Polls.findOne({\"poll_info.users\": requesterUserId, \"poll_info.meetingId\": meetingId, \"poll_info.poll.answers.id\": pollAnswerId},\r\n        {fields: {\"poll_info.poll.id\": 1, _id: 0}})\r\n      _poll_id = result.poll_info.poll.id\r\n\r\n      if eventName? and meetingId? and requesterUserId? and _poll_id? and pollAnswerId?\r\n        message =\r\n          header:\r\n            timestamp: new Date().getTime()\r\n            name: eventName\r\n          payload:\r\n            meeting_id: meetingId\r\n            user_id: requesterUserId\r\n            poll_id: _poll_id\r\n            question_id: 0\r\n            answer_id: pollAnswerId\r\n\r\n        Meteor.Polls.update({\"poll_info.users\": requesterUserId, \"poll_info.meetingId\": meetingId, \"poll_info.poll.answers.id\": pollAnswerId},\r\n          { $pull: {\"poll_info.users\": requesterUserId}});\r\n\r\n        Meteor.log.info \"publishing Poll response to redis\"\r\n        publish Meteor.config.redis.channels.toBBBApps.polling, message\r\n\r\n\r\n# --------------------------------------------------------------------------------------------\r\n# Private methods on server\r\n# --------------------------------------------------------------------------------------------\r\n@addPollToCollection = (poll, requester_id, users, meetingId) ->\r\n  #copying all the userids into an array\r\n  _users = []\r\n  for user in users\r\n    _users.push user.user.userid\r\n  #adding the initial number of votes for each answer\r\n  for answer in poll.answers\r\n    answer.num_votes = 0\r\n  #adding the initial number of responders and respondents to the poll, which will be displayed for presenter (in HTML5 client) when he starts the poll\r\n  poll.num_responders = -1\r\n  poll.num_respondents = -1\r\n\r\n  #adding all together and inserting into the Polls collection\r\n  entry =\r\n    poll_info:\r\n      \"meetingId\": meetingId\r\n      \"poll\": poll\r\n      \"requester\": requester_id\r\n      \"users\": _users\r\n  Meteor.log.info \"added poll _id=[#{poll.id}]:meetingId=[#{meetingId}].\"\r\n  Meteor.Polls.insert(entry)\r\n\r\n@clearPollCollection = (meetingId, poll_id) ->\r\n  if meetingId? and poll_id? and Meteor.Polls.findOne({\"poll_info.meetingId\": meetingId, \"poll_info.poll.id\": poll_id})?\r\n    Meteor.Polls.remove({\r\n      \"poll_info.meetingId\": meetingId, \r\n      \"poll_info.poll.id\": poll_id}, \r\n      Meteor.log.info \"cleared Polls Collection (meetingId: #{meetingId}, pollId: #{poll_id}!)\")\r\n  else\r\n    Meteor.Polls.remove({}, Meteor.log.info \"cleared Polls Collection (all meetings)!\")\r\n\r\n@updatePollCollection = (poll, meetingId, requesterId) ->\r\n  if poll.answers? and poll.num_responders? and poll.num_respondents? and poll.id? and meetingId? and requesterId?\r\n    Meteor.Polls.update({\"poll_info.meetingId\": meetingId, \"poll_info.requester\": requesterId, \"poll_info.poll.id\": poll.id},\r\n      {$set:\r\n        {\"poll_info.poll.answers\": poll.answers, \"poll_info.poll.num_responders\": poll.num_responders, \"poll_info.poll.num_respondents\": poll.num_respondents}\r\n      }, Meteor.log.info \"updating Polls Collection (meetingId: #{meetingId}, pollId: #{poll.id}!)\")\r\n"]}