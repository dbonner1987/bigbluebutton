{"version":3,"sources":["meteor://ðŸ’»app/server/user_permissions.coffee"],"names":[],"mappings":"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","file":"/server/user_permissions.coffee.js","sourcesContent":["\npresenter =\n  switchSlide: true\n\n  #poll\n  subscribePoll: true\n  subscribeAnswers: true\n\n# holds the values for whether the moderator user is allowed to perform an action (true)\n# or false if not allowed. Some actions have dynamic values depending on the current lock settings\nmoderator =\n  # audio listen only\n  joinListenOnly: true\n  leaveListenOnly: true\n\n  # join audio with mic cannot be controlled on the server side as it is\n  # a client side only functionality\n\n  # raising/lowering hand\n  raiseOwnHand : true\n  lowerOwnHand : true\n\n  # muting\n  muteSelf : true\n  unmuteSelf : true\n\n  logoutSelf : true\n\n  #subscribing\n  subscribeUsers: true\n  subscribeChat: true\n\n  #chat\n  chatPublic: true\n  chatPrivate: true\n\n  #poll\n  subscribePoll: true\n  subscribeAnswers: false\n\n  #emojis\n  setEmojiStatus: true\n  clearEmojiStatus: true\n\n# holds the values for whether the viewer user is allowed to perform an action (true)\n# or false if not allowed. Some actions have dynamic values depending on the current lock settings\nviewer = (meetingId, userId) ->\n\n  # listen only\n  joinListenOnly: true\n  leaveListenOnly: true\n\n  # join audio with mic cannot be controlled on the server side as it is\n  # a client side only functionality\n\n  # raising/lowering hand\n  raiseOwnHand : true\n  lowerOwnHand : true\n\n  # muting\n  muteSelf : true\n  unmuteSelf : !(Meteor.Meetings.findOne({meetingId:meetingId})?.roomLockSettings.disableMic) or\n                !(Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.locked)\n\n  logoutSelf : true\n\n  #subscribing\n  subscribeUsers: true\n  subscribeChat: true\n\n  #chat\n  chatPublic: !(Meteor.Meetings.findOne({meetingId:meetingId})?.roomLockSettings.disablePublicChat) or\n                !(Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.locked) or\n                Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.presenter\n  chatPrivate: !(Meteor.Meetings.findOne({meetingId:meetingId})?.roomLockSettings.disablePrivateChat) or\n                !(Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.locked) or\n                Meteor.Users.findOne({meetingId:meetingId, userId:userId})?.user.presenter\n\n  #poll\n  subscribePoll: true\n  subscribeAnswers: false\n\n  #emojis\n  setEmojiStatus: true\n  clearEmojiStatus: true\n\n# carries out the decision making for actions affecting users. For the list of\n# actions and the default value - see 'viewer' and 'moderator' in the beginning of the file\n@isAllowedTo = (action, meetingId, userId, authToken) ->\n\n  validated = Meteor.Users.findOne({meetingId:meetingId, userId: userId})?.validated\n  Meteor.log.info \"in isAllowedTo: action-#{action}, userId=#{userId}, authToken=#{authToken} validated:#{validated}\"\n\n  user = Meteor.Users.findOne({meetingId:meetingId, userId: userId})\n  # Meteor.log.info \"user=\" + JSON.stringify user\n  if user? and authToken is user.authToken # check if the user is who he claims to be\n    if user.validated and user.clientType is \"HTML5\"\n\n      # PRESENTER\n      # check presenter specific actions or fallback to regular viewer actions\n      if user.user?.presenter\n        Meteor.log.info \"user permissions presenter case\"\n        return presenter[action] or viewer(meetingId, userId)[action] or false\n\n      # VIEWER\n      else if user.user?.role is 'VIEWER'\n        Meteor.log.info \"user permissions viewer case\"\n        return viewer(meetingId, userId)[action] or false\n\n      # MODERATOR\n      else if user.user?.role is 'MODERATOR'\n        Meteor.log.info \"user permissions moderator case\"\n        return moderator[action] or false\n\n      else\n        Meteor.log.warn \"UNSUCCESSFULL ATTEMPT FROM userid=#{userId} to perform:#{action}\"\n        return false\n    else\n      # user was not validated\n      if action is \"logoutSelf\"\n        # on unsuccessful sign-in\n        Meteor.log.warn \"a user was successfully removed from the meeting following an unsuccessful login\"\n        return true\n      return false\n\n  else\n    Meteor.log.error \"in meetingId=#{meetingId} userId=#{userId} tried to perform #{action} without permission\" +\n     \"\\n..while the authToken was #{user?.authToken}    and the user's object is #{JSON.stringify user}\"\n    return false\n"]}