{"version":3,"sources":["meteor://ðŸ’»app/server/collection_methods/shapes.coffee"],"names":[],"mappings":"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","file":"/server/collection_methods/shapes.coffee.js","sourcesContent":["# --------------------------------------------------------------------------------------------\n# Private methods on server\n# --------------------------------------------------------------------------------------------\n@addShapeToCollection = (meetingId, whiteboardId, shapeObject) ->\n  if shapeObject?.shape_type is \"text\"\n    Meteor.log.info \"we are dealing with a text shape and the event is:#{shapeObject.status}\"\n\n    entry =\n      meetingId: meetingId\n      whiteboardId: whiteboardId\n      shape:\n        type: shapeObject.shape.type\n        textBoxHeight: shapeObject.shape.textBoxHeight\n        backgroundColor: shapeObject.shape.backgroundColor\n        fontColor: shapeObject.shape.fontColor\n        status: shapeObject.shape.status\n        dataPoints: shapeObject.shape.dataPoints\n        x: shapeObject.shape.x\n        textBoxWidth: shapeObject.shape.textBoxWidth\n        whiteboardId: shapeObject.shape.whiteboardId\n        fontSize: shapeObject.shape.fontSize\n        id: shapeObject.shape.id\n        y: shapeObject.shape.y\n        calcedFontSize: shapeObject.shape.calcedFontSize\n        text: shapeObject.shape.text\n        background: shapeObject.shape.background\n\n    if shapeObject.status is \"textEdited\" or shapeObject.status is \"textPublished\"\n      # only keep the final version of the text shape\n      removeTempTextShape = (callback) ->\n        Meteor.Shapes.remove({'shape.id':shapeObject.shape.id})\n        # for s in Meteor.Shapes.find({'shape.id':shapeObject.shape.id}).fetch()\n        #   Meteor.log.info \"there is this shape: #{s.shape.text}\"\n        callback()\n\n      removeTempTextShape( ->\n        # display as the prestenter is typing\n        id = Meteor.Shapes.insert(entry)\n        Meteor.log.info \"#{shapeObject.status} substituting the temp shapes with the newer one\"\n      )\n\n  else\n    # the mouse button was released - the drawing is complete\n    # TODO: pencil messages currently don't send draw_end and are labeled all as DRAW_START\n    if shapeObject?.status is \"DRAW_END\" or (shapeObject?.status is \"DRAW_START\" and shapeObject?.shape_type is \"pencil\")\n      entry =\n        meetingId: meetingId\n        whiteboardId: whiteboardId\n        shape:\n          wb_id: shapeObject.wb_id\n          shape_type: shapeObject.shape_type\n          status: shapeObject.status\n          id: shapeObject.id\n          shape:\n            type: shapeObject.shape.type\n            status: shapeObject.shape.status\n            points: shapeObject.shape.points\n            whiteboardId: shapeObject.shape.whiteboardId\n            id: shapeObject.shape.id\n            square: shapeObject.shape.square\n            transparency: shapeObject.shape.transparency\n            thickness: shapeObject.shape.thickness\n            color: shapeObject.shape.color\n            result: shapeObject.shape.result\n            num_respondents: shapeObject.shape.num_respondents\n            num_responders: shapeObject.shape.num_responders\n\n      id = Meteor.Shapes.insert(entry)\n\n@removeAllShapesFromSlide = (meetingId, whiteboardId) ->\n  Meteor.log.info \"removeAllShapesFromSlide__\" + whiteboardId\n  if meetingId? and whiteboardId? and Meteor.Shapes.find({meetingId: meetingId, whiteboardId: whiteboardId})?\n    Meteor.Shapes.remove {meetingId: meetingId, whiteboardId: whiteboardId}, ->\n      Meteor.log.info \"clearing all shapes from slide\"\n\n      # After shapes are cleared, wait 1 second and set cleaning off\n      Meteor.setTimeout ->\n        Meteor.WhiteboardCleanStatus.update({meetingId: meetingId}, {$set: {in_progress: false}})\n      , 1000\n\n@removeShapeFromSlide = (meetingId, whiteboardId, shapeId) ->\n  shapeToRemove = Meteor.Shapes.findOne({meetingId: meetingId, whiteboardId: whiteboardId, \"shape.id\": shapeId})\n  if meetingId? and whiteboardId? and shapeId? and shapeToRemove?\n    Meteor.Shapes.remove(shapeToRemove._id)\n    Meteor.log.info \"----removed shape[\" + shapeId + \"] from \" + whiteboardId\n    Meteor.log.info \"remaining shapes on the slide:\" + Meteor.Shapes.find({meetingId: meetingId, whiteboardId: whiteboardId}).count()\n\n\n# called on server start and meeting end\n@clearShapesCollection = (meetingId) ->\n  if meetingId?\n    Meteor.Shapes.remove {}, ->\n      Meteor.log.info \"cleared Shapes Collection (meetingId: #{meetingId}!\"\n      Meteor.WhiteboardCleanStatus.update({meetingId: meetingId}, {$set: {in_progress: false}})\n  else\n    Meteor.Shapes.remove {}, ->\n      Meteor.log.info \"cleared Shapes Collection (all meetings)!\"\n      Meteor.WhiteboardCleanStatus.update({meetingId: meetingId}, {$set: {in_progress: false}})\n\n# --------------------------------------------------------------------------------------------\n# end Private methods on server\n# --------------------------------------------------------------------------------------------\n"]}